translation_unit [0..115]
    function_decl [0..31]
        function_header [0..7]
            Fn "fn" [0..2]
            Whitespace " " [2..3]
            Ident "f" [3..4]
            LPar "(" [4..5]
            parameters [5..5]
            RPar ")" [5..6]
            Whitespace " " [6..7]
            return_type [7..7]
        compound_statement [7..31]
            LBrace "{" [7..8]
            Whitespace "\n  " [8..11]
            func_call_statement [11..21]
                func_call [11..21]
                    Ident "g" [11..12]
                    argument_expression_list [12..21]
                        LPar "(" [12..13]
                        int_expression [13..14]
                            IntLiteral "1" [13..14]
                        Comma "," [14..15]
                        Whitespace "\n  " [15..18]
                        error [18..21]
                            Let "let" [18..21]
            Whitespace " " [21..22]
            simple_assignment_statement [22..29]
                ident_expression [22..23]
                    Ident "x" [22..23]
                Whitespace " " [23..24]
                Eq "=" [24..25]
                Whitespace " " [25..26]
                binary_expression [26..29]
                    int_expression [26..27]
                        IntLiteral "2" [26..27]
                    Whitespace " " [27..28]
                    Plus "+" [28..29]
            Whitespace "\n" [29..30]
            RBrace "}" [30..31]
    Whitespace "\n\n" [31..33]
    function_decl [33..40]
        function_header [33..40]
            Fn "fn" [33..35]
            Whitespace " " [35..36]
            Ident "g" [36..37]
            LPar "(" [37..38]
            Whitespace "\n\n" [38..40]
            parameters [40..40]
            return_type [40..40]
        compound_statement [40..40]
    function_decl [40..114]
        function_header [40..47]
            Fn "fn" [40..42]
            Whitespace " " [42..43]
            Ident "h" [43..44]
            LPar "(" [44..45]
            parameters [45..45]
            RPar ")" [45..46]
            Whitespace " " [46..47]
            return_type [47..47]
        compound_statement [47..114]
            LBrace "{" [47..48]
            Whitespace "\n  " [48..51]
            variable_or_value_statement [51..67]
                variable_decl [51..66]
                    Var "var" [51..54]
                    Whitespace " " [54..55]
                    typed_ident [55..56]
                        Ident "a" [55..56]
                    Whitespace " " [56..57]
                    Eq "=" [57..58]
                    Whitespace " " [58..59]
                    ident_expression [59..66]
                        Ident "b" [59..60]
                        template_list [60..66]
                            Lt "<" [60..61]
                            ident_expression [61..65]
                                Ident "c" [61..62]
                                template_list [62..65]
                                    Lt "<" [62..63]
                                    ident_expression [63..64]
                                        Ident "d" [63..64]
                                    Gt ">" [64..65]
                            Gt ">" [65..66]
                Semi ";" [66..67]
            Whitespace "\n  " [67..70]
            variable_or_value_statement [70..87]
                variable_decl [70..86]
                    Var "var" [70..73]
                    Whitespace " " [73..74]
                    typed_ident [74..75]
                        Ident "e" [74..75]
                    Whitespace " " [75..76]
                    Eq "=" [76..77]
                    Whitespace " " [77..78]
                    binary_expression [78..86]
                        binary_expression [78..81]
                            ident_expression [78..79]
                                Ident "f" [78..79]
                            Lt "<" [79..80]
                            ident_expression [80..81]
                                Ident "g" [80..81]
                        Pipe2 "||" [81..83]
                        binary_expression [83..86]
                            ident_expression [83..84]
                                Ident "h" [83..84]
                            Gt ">" [84..85]
                            ident_expression [85..86]
                                Ident "i" [85..86]
                Semi ";" [86..87]
            Whitespace "\n  " [87..90]
            variable_or_value_statement [90..97]
                variable_decl [90..97]
                    Var "var" [90..93]
                    template_list [93..94]
                        Lt "<" [93..94]
                    Whitespace "\n  " [94..97]
                    typed_ident [97..97]
            variable_or_value_statement [97..112]
                variable_decl [97..111]
                    Var "var" [97..100]
                    Whitespace " " [100..101]
                    typed_ident [101..102]
                        Ident "j" [101..102]
                    Whitespace " " [102..103]
                    Eq "=" [103..104]
                    Whitespace " " [104..105]
                    binary_expression [105..111]
                        ident_expression [105..106]
                            Ident "k" [105..106]
                        Whitespace " " [106..107]
                        Lt "<" [107..108]
                        Lt "<" [108..109]
                        Whitespace " " [109..110]
                        ident_expression [110..111]
                            Ident "l" [110..111]
                Semi ";" [111..112]
            Whitespace "\n" [112..113]
            RBrace "}" [113..114]
    Whitespace "\n" [114..115]
